/*
 * ButtonLED.c
 *
 * Created: 10/29/2020 9:34:52 PM
 * Author : alecr
 */ 
#include <avr/io.h>        		//This is our usual include
#define F_CPU 16000000UL    	//This says to the compiler at what frequency our Atmega is running, in this case its 16Mhz
#include <util/delay.h>      	//The delay functions/routines

uint8_t readGButton(void);   	//Declaration of the readButton function
uint8_t readRButton(void);   	//Declaration of the readButton function
uint8_t readYButton(void);   	//Declaration of the readButton function

int main(void){
DDRD &= ~(1<<PD2);    	//Configure PORTD pin 2 as an input
DDRD &= ~(1<<PD3);		//Configure PORTD pin 3 as an input
DDRD &= ~(1<<PD4);		//Configure PORTD pin 4 as an input

PORTD |= (1<<PD2);    	//Activate pull-ups in PORTD pin 2
PORTD |= (1<<PD3);		//Activate pull-ups in PORTD pin 3
PORTD |= (1<<PD4);		//Activate pull-ups in PORTD pin 4

DDRB |= (1<<PB5);    	//Configure PORTB pin 5 an output, this is the digital 13 in the Arduino that as the built-in led
DDRB |= (1<<PB6);		//Configure PORTB pin 6 as output
DDRB |= (1<<PB7);		//Configure PORTB pin 7 as output


	while(1){                		//Infinite loop
		if( (readGButton() == 1) ){
			PORTB ^=(1<<PB6);
		}
		if( (readGButton() ==1) && (PORTB == 0b01000000) ){
			PORTB &=(1<<PB6);
		}
		_delay_ms(100);
		if( (readYButton() == 1) ){
			PORTB ^=(1<<PB7);
		}
		if( (readYButton() ==1) && (PORTB == 0b10000000) ){
			PORTB &=(1<<PB7);
		}
		_delay_ms(100);
		if( (readRButton() == 1) ){
			PORTB ^=(1<<PB5);
		}
		if( (readRButton() ==1) && (PORTB == 0b00100000) ){
			PORTB &=(1<<PB5);
		}
		_delay_ms(10);
	 }

return 0;
}

uint8_t readGButton(void){
	if((PIND & (1<<PD4)) == 0){        	//If the button was pressed
 		_delay_ms(10); }        		//Debounce the read value
 	if((PIND & (1<<PD4)) == 0){        	//Verify that the value is the same that what was read
 		return 1; }            			//If it is still 0 its because we had a button press
 	else{                    			//If the value is different the press is invalid
 		return 0; }
}

uint8_t readYButton(void){
	if((PIND & (1<<PD2)) == 0){        	//If the button was pressed
	_delay_ms(10); }        		//Debounce the read value
	if((PIND & (1<<PD2)) == 0){        	//Verify that the value is the same that what was read
	return 1; }            			//If it is still 0 its because we had a button press
	else{                    			//If the value is different the press is invalid
	return 0; }
}

uint8_t readRButton(void){
	if((PIND & (1<<PD3)) == 0){        	//If the button was pressed
	_delay_ms(10); }        		//Debounce the read value
	if((PIND & (1<<PD3)) == 0){        	//Verify that the value is the same that what was read
	return 1; }            			//If it is still 0 its because we had a button press
	else{                    			//If the value is different the press is invalid
	return 0; }
}



